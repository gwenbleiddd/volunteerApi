openapi: 3.0.3
info:
  title: Opportunity Service
  version: 0.0.0
paths:
  /api/applications/:
    get:
      operationId: api_applications_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedApplicationList'
          description: ''
    post:
      operationId: api_applications_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Application'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Application'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: ''
  /api/applications/{id}/:
    get:
      operationId: api_applications_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: ''
    put:
      operationId: api_applications_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Application'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Application'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: ''
    patch:
      operationId: api_applications_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedApplication'
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: ''
    delete:
      operationId: api_applications_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
  /api/notifications/:
    get:
      operationId: api_notifications_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/opportunities/:
    get:
      operationId: api_opportunities_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOpportunityList'
          description: ''
    post:
      operationId: api_opportunities_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Opportunity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Opportunity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Opportunity'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Opportunity'
          description: ''
  /api/opportunities/{id}/:
    get:
      operationId: api_opportunities_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Opportunity'
          description: ''
    put:
      operationId: api_opportunities_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Opportunity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Opportunity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Opportunity'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Opportunity'
          description: ''
    patch:
      operationId: api_opportunities_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOpportunity'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOpportunity'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOpportunity'
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Opportunity'
          description: ''
    delete:
      operationId: api_opportunities_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '204':
          description: No response body
  /api/profile/:
    get:
      operationId: api_profile_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registre'
          description: ''
    put:
      operationId: api_profile_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registre'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Registre'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Registre'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registre'
          description: ''
    patch:
      operationId: api_profile_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRegistre'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRegistre'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRegistre'
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registre'
          description: ''
  /api/register/:
    post:
      operationId: api_register_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registre'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Registre'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Registre'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registre'
          description: ''
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - Bearer: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/token/:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      security:
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      security:
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/tracking/:
    get:
      operationId: api_tracking_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - Bearer: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tracking'
          description: ''
components:
  schemas:
    Application:
      type: object
      properties:
        opportunity:
          type: integer
          nullable: true
        id:
          type: integer
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        application_date:
          type: string
          format: date-time
      required:
      - application_date
      - id
    Notification:
      type: object
      properties:
        user_info:
          type: string
          readOnly: true
        notifications:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - notifications
      - user_info
    Opportunity:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 200
        organization:
          type: integer
        required_skills:
          type: string
          maxLength: 100
        location:
          type: string
          maxLength: 100
        longitude:
          type: number
          format: double
          nullable: true
        latitude:
          type: number
          format: double
          nullable: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        completed:
          type: boolean
        feedback:
          type: string
          nullable: true
        applicants:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - applicants
      - description
      - end_date
      - id
      - location
      - organization
      - required_skills
      - start_date
      - title
    PaginatedApplicationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Application'
    PaginatedOpportunityList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Opportunity'
    PatchedApplication:
      type: object
      properties:
        opportunity:
          type: integer
          nullable: true
        id:
          type: integer
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        application_date:
          type: string
          format: date-time
    PatchedOpportunity:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 200
        organization:
          type: integer
        required_skills:
          type: string
          maxLength: 100
        location:
          type: string
          maxLength: 100
        longitude:
          type: number
          format: double
          nullable: true
        latitude:
          type: number
          format: double
          nullable: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        completed:
          type: boolean
        feedback:
          type: string
          nullable: true
        applicants:
          type: array
          items:
            type: string
          readOnly: true
    PatchedRegistre:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
        user_type:
          $ref: '#/components/schemas/UserTypeEnum'
        organization_name:
          type: string
          nullable: true
          description: For organizations only.
          maxLength: 255
        mission_statement:
          type: string
          nullable: true
          description: For organizations only.
        contact:
          type: string
          nullable: true
          description: For Anyone.
          maxLength: 15
        skills:
          type: string
          nullable: true
          description: For volunteers only.
        availability:
          type: string
          nullable: true
          description: For volunteers only.
        location:
          type: string
          nullable: true
          description: For volunteers only.
          maxLength: 255
    Registre:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
        user_type:
          $ref: '#/components/schemas/UserTypeEnum'
        organization_name:
          type: string
          nullable: true
          description: For organizations only.
          maxLength: 255
        mission_statement:
          type: string
          nullable: true
          description: For organizations only.
        contact:
          type: string
          nullable: true
          description: For Anyone.
          maxLength: 15
        skills:
          type: string
          nullable: true
          description: For volunteers only.
        availability:
          type: string
          nullable: true
          description: For volunteers only.
        location:
          type: string
          nullable: true
          description: For volunteers only.
          maxLength: 255
      required:
      - email
      - id
      - password
      - user_type
    StatusEnum:
      enum:
      - pending
      - accepted
      - rejected
      type: string
      description: |-
        * `pending` - Pending
        * `accepted` - Accepted
        * `rejected` - Rejected
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    Tracking:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        user_type:
          $ref: '#/components/schemas/UserTypeEnum'
        opportunities_details:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - email
      - opportunities_details
      - user_type
    UserTypeEnum:
      enum:
      - volunteer
      - organization
      type: string
      description: |-
        * `volunteer` - Volunteer
        * `organization` - Organization
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "B"
